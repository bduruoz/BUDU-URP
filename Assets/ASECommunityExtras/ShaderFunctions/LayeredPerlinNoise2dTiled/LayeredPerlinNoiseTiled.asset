%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 78b2425a2284af743826c689403a4924, type: 3}
  m_Name: LayeredPerlinNoiseTiled
  m_EditorClassIdentifier: 
  m_functionInfo: "// Made with Amplify Shader Editor v1.9.6.1\n// Available at the
    Unity Asset Store - http://u3d.as/y3X \n/*ASEBEGIN\nVersion=19601\nNode;AmplifyShaderEditor.CommentaryNode;18;-512,-640;Inherit;False;833.639;355.1595;Comment;7;16;15;14;13;12;11;10;Extra
    Required functions;1,1,1,1;0;0\nNode;AmplifyShaderEditor.CustomExpressionNode;10;-480,-576;Float;False;float2
    cellsMimimum = floor(value)@$float2 cellsMaximum = ceil(value)@$cellsMimimum
    = modulo2(cellsMimimum, period)@$cellsMaximum = modulo2(cellsMaximum, period)@$$//generate
    random directions$float2 lowerLeftDirection = rand2dTo2d(float2(cellsMimimum.x,
    cellsMimimum.y)) * 2 - 1@$float2 lowerRightDirection = rand2dTo2d(float2(cellsMaximum.x,
    cellsMimimum.y)) * 2 - 1@$float2 upperLeftDirection = rand2dTo2d(float2(cellsMimimum.x,
    cellsMaximum.y)) * 2 - 1@$float2 upperRightDirection = rand2dTo2d(float2(cellsMaximum.x,
    cellsMaximum.y)) * 2 - 1@$$float2 fraction = frac(value)@$$//get values of cells
    based on fraction and cell directions$float lowerLeftFunctionValue = dot(lowerLeftDirection,
    fraction - float2(0, 0))@$float lowerRightFunctionValue = dot(lowerRightDirection,
    fraction - float2(1, 0))@$float upperLeftFunctionValue = dot(upperLeftDirection,
    fraction - float2(0, 1))@$float upperRightFunctionValue = dot(upperRightDirection,
    fraction - float2(1, 1))@$$float interpolatorX = easeInOut(fraction.x)@$float
    interpolatorY = easeInOut(fraction.y)@$$//interpolate between values$float lowerCells
    = lerp(lowerLeftFunctionValue, lowerRightFunctionValue, interpolatorX)@$float
    upperCells = lerp(upperLeftFunctionValue, upperRightFunctionValue, interpolatorX)@$float
    noise = lerp(lowerCells, upperCells, interpolatorY)@$return noise@;1;Create;2;True;value;FLOAT2;0,0;In;;Float;False;True;period;FLOAT2;0,0;In;;Float;False;perlinNoise;False;True;3;12;16;11;;False;2;0;FLOAT2;0,0;False;1;FLOAT2;0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;11;-288,-576;Float;False;float2
    positiveDivident = divident % divisor + divisor@$return positiveDivident % divisor@;2;Create;2;True;divident;FLOAT2;0,0;In;;Float;False;True;divisor;FLOAT2;0,0;In;;Float;False;modulo2;False;True;0;;False;2;0;FLOAT2;0,0;False;1;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.CustomExpressionNode;12;-96,-576;Float;False;return
    float2$($\trand2dTo1d(value, float2(12.989, 78.233)),$\trand2dTo1d(value, float2(39.346,
    11.135))$)@;2;Create;1;True;value;FLOAT2;0,0;In;;Float;False;rand2dTo2d;False;True;1;13;;False;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.CustomExpressionNode;13;-96,-480;Float;False;float2
    smallValue = cos(value)@$float random = dot(smallValue, dotDir)@$random = frac(sin(random)
    * 143758.5453)@$return random@;1;Create;2;True;value;FLOAT2;0,0;In;;Float;False;True;dotDir;FLOAT2;0,0;In;;Float;False;rand2dTo1d;False;True;0;;False;2;0;FLOAT2;0,0;False;1;FLOAT2;0,0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;14;96,-576;Float;False;return
    interpolator * interpolator@;1;Create;1;True;interpolator;FLOAT;0;In;;Float;False;easeIn;False;True;0;;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;15;96,-480;Float;False;
    return 1 - easeIn(1 - interpolator)@;1;Create;1;True;interpolator;FLOAT;0;In;;Float;False;easeOut;False;True;1;14;;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;16;96,-384;Float;False;float
    easeInValue = easeIn(interpolator)@$float easeOutValue = easeOut(interpolator)@$return
    lerp(easeInValue, easeOutValue, interpolator)@;1;Create;1;True;interpolator;FLOAT;0;In;;Float;False;easeInOut;False;True;2;15;14;;False;1;0;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;6;-512,-128;Inherit;False;UV;2;1;False;1;0;FLOAT2;0,0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.SimpleMultiplyOpNode;7;-352,-96;Inherit;False;2;2;0;FLOAT2;0,0;False;1;FLOAT;0;False;1;FLOAT2;0\nNode;AmplifyShaderEditor.FunctionInput;1;-544,-32;Inherit;False;Cell
    Amount;1;2;False;1;0;FLOAT;2;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;3;-384,48;Inherit;False;Roughness;1;4;False;1;0;FLOAT;3;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;4;-384,128;Inherit;False;Persistance;1;5;False;1;0;FLOAT;0.4;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;2;-352,208;Inherit;False;Period;1;3;False;1;0;FLOAT;4;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionInput;17;-352,288;Inherit;False;Octaves;1;0;False;1;0;FLOAT;4;False;1;FLOAT;0\nNode;AmplifyShaderEditor.RangedFloatNode;9;-64,240;Float;False;Constant;_Float0;Float
    0;0;0;Create;True;0;0;0;False;0;False;0.5;0;0;0;0;1;FLOAT;0\nNode;AmplifyShaderEditor.SimpleAddOpNode;8;96,128;Inherit;False;2;2;0;FLOAT;0;False;1;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.CustomExpressionNode;5;-128,48;Float;False;float
    noise = 0@$float frequency = 1.5@$float factor = 1@$$[unroll(OCTAVES)]$for(int
    i=0@ i<OCTAVES@ i++)${$\tnoise = noise + perlinNoise(value * frequency + i *
    01.72354, _Period * frequency) * factor@$\tfactor *= _Persistance@$\tfrequency
    *= _Roughness@$}$return noise@;1;Create;5;True;value;FLOAT2;0,0;In;;Float;False;True;_Roughness;FLOAT;0;In;;Float;False;True;_Persistance;FLOAT;0;In;;Float;False;True;_Period;FLOAT;0;In;;Float;False;True;OCTAVES;FLOAT;0;In;;Float;False;sampleLayeredNoise;False;True;1;10;;False;5;0;FLOAT2;0,0;False;1;FLOAT;0;False;2;FLOAT;0;False;3;FLOAT;0;False;4;FLOAT;0;False;1;FLOAT;0\nNode;AmplifyShaderEditor.FunctionOutput;0;224,128;Inherit;False;True;-1;Out;0;False;1;0;FLOAT;0;False;1;FLOAT;0\nWireConnection;7;0;6;0\nWireConnection;7;1;1;0\nWireConnection;8;0;5;0\nWireConnection;8;1;9;0\nWireConnection;5;0;7;0\nWireConnection;5;1;3;0\nWireConnection;5;2;4;0\nWireConnection;5;3;2;0\nWireConnection;5;4;17;0\nWireConnection;0;0;8;0\nASEEND*/\n//CHKSM=DDC27D6C9692045CCB5CFCB3D118FBF83136A79F"
  m_functionName: 
  m_description: 
  m_additionalIncludes:
    m_additionalIncludes: []
    m_outsideIncludes: []
  m_additionalPragmas:
    m_additionalPragmas: []
    m_outsidePragmas: []
  m_additionalDirectives:
    m_validData: 0
    m_isDirty: 0
    m_moduleName: ' Additional Directives'
    m_independentModule: 1
    m_customEdited: 0
    m_additionalDirectives: []
    m_shaderFunctionDirectives: []
    m_nativeDirectives: []
    m_nativeDirectivesIndex: -1
    m_nativeDirectivesFoldout: 0
    m_directivesSaveItems: []
  m_nodeCategory: 3
  m_headerStyle: 0
  m_headerColor: {r: 1, g: 0.4, b: 0, a: 1}
  m_customNodeCategory: 
  m_previewPosition: 0
  m_hidden: 0
  m_url: 
